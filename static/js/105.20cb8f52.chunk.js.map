{"version":3,"file":"static/js/105.20cb8f52.chunk.js","mappings":"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","sources":["components/VisionIconsLogIn/VisionIconsLogIn.js","pages/Login/Login.styled.jsx","pages/Login/Login.js","pages/Register/Register.styled.jsx"],"sourcesContent":["export default function VisionIconsLogIn({ type }) {\n  return (\n    <>\n      {type === 'password' ? (\n        <svg width={30} height={30}>\n          <use\n            xlinkHref={\n              process.env.PUBLIC_URL + '/images/sprite.svg#icon-show-password'\n            }\n            fill=\"#3E85F3\"\n          />\n        </svg>\n      ) : (\n        <svg width={30} height={30}>\n          <use\n            xlinkHref={\n              process.env.PUBLIC_URL + '/images/sprite.svg#icon-close-password'\n            }\n            fill=\"#3E85F3\"\n          />\n        </svg>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst URL = process.env.PUBLIC_URL;\n\nexport const ContainerLOginrForm = styled.div`\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  @media (min-width: 320px) {\n    background-color: #ffffff;\n  }\n\n  @media (min-width: 375px) {\n    background-color: ${props => props.theme.colors.secondBlueColor};\n  }\n\n  @media (min-width: 1280px) {\n    background-image: url(${URL}/images/goose_auth-desctop/rocket_auth-desctop.png);\n\n    background-size: 368px 521px;\n    background-repeat: no-repeat;\n    background-position: right 65px bottom 40%;\n  }\n`;\n\nexport const LoginForm = styled.form`\n  padding: 0px;\n  margin: 0 auto;\n  border-radius: 8px;\n  margin-bottom: 24px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: #ffffff;\n  position: relative;\n\n  @media (min-width: 320px) {\n    width: 100%;\n    padding: 10px;\n  }\n  @media (min-width: 375px) {\n    width: 300px;\n    padding: 20px;\n  }\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n  }\n`;\n\nexport const LoginInput = styled.input`\n  height: 54px;\n  border-radius: 8px;\n  border: 1px solid #dce3e5;\n  padding: 18px;\n  transition: border 0.5s ease;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #111111;\n  }\n  &.main {\n    border: 1px solid #11111126;\n  }\n  &.fail {\n    border: 1px solid #e74a3b;\n  }\n  &.good {\n    border: 1px solid #3cbc81;\n  }\n  ::placeholder,\n  ::-webkit-input-placeholder {\n    color: #dce3e5;\n  }\n  :-ms-input-placeholder {\n    color: #dce3e5;\n  }\n  @media (min-width: 320px) {\n    width: 100%;\n  }\n  @media (min-width: 375px) {\n    width: 100%;\n  }\n  @media (min-width: 1280px) {\n    width: 400px;\n  }\n`;\nexport const LoginTitle = styled.h1`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 24px;\n\n  color: #3e85f3;\n  margin-bottom: 40px;\n`;\nexport const ContainerSignUp = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Loginlabel = styled.label`\n  &:nth-child(-n + 4) {\n    margin-bottom: 18px;\n  }\n  &:nth-child(5) {\n    margin-bottom: 48px;\n    position: relative;\n  }\n`;\nexport const LoginNameOfInput = styled.span`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n\n  color: #111111;\n  margin-bottom: 8px;\n`;\n\nexport const LoginSubmitBtn = styled.button`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n\n  height: 56px;\n  width: 100%;\n  background-color: #3e85f3;\n  border: none;\n  border-radius: 16px;\n  gap: 11px;\n  color: #ffffff;\n  cursor: pointer;\n  transition: background-color 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n  }\n`;\n\nexport const SignUpBtn = styled(NavLink)`\n  border: none;\n  cursor: pointer;\n  position: relative;\n`;\n\nexport const SignUpBtnText = styled.span`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n  color: #3e85f3;\n\n  &:after {\n    content: ' ';\n    background: #3e85f3;\n    width: 100%;\n    height: 2px;\n    position: absolute;\n    top: 21px;\n    left: 0px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport { BiLogIn } from 'react-icons/bi';\n\nimport { useTranslation } from 'react-i18next';\nimport { Toaster } from 'react-hot-toast';\nimport { ToasterNotify } from 'components/Notify/Notify';\nimport VisionIconsLogIn from 'components/VisionIconsLogIn/VisionIconsLogIn';\nimport { DivIconToglePassword } from 'pages/Register/Register.styled';\nimport {\n  LoginForm,\n  LoginInput,\n  LoginTitle,\n  LoginNameOfInput,\n  Loginlabel,\n  LoginSubmitBtn,\n  SignUpBtn,\n  SignUpBtnText,\n  ContainerLOginrForm,\n} from './Login.styled';\n\nexport default function Login() {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [type, setType] = useState('password');\n\n  const [borderColorMailInpt, setBorderColorMailInpt] = useState('main');\n  const [borderColorPassInpt, setBorderColorPassInpt] = useState('main');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email === '') {\n      setBorderColorMailInpt('fail');\n    }\n    if (password === '') {\n      setBorderColorPassInpt('fail');\n    }\n    if (email === '' || password === '') {\n      return ToasterNotify(`${t('notifications.ErrorEmppyFields')}`);\n    }\n    if (email !== '' && password !== '') {\n      setBorderColorMailInpt('main');\n      setBorderColorPassInpt('main');\n      dispatch(logIn({ email, password }));\n    }\n  };\n\n  function togglePassInput() {\n    if (type === 'password') {\n      setType('text');\n    }\n    if (type === 'text') {\n      setType('password');\n    }\n  }\n  return (\n    <ContainerLOginrForm>\n      <LoginForm onSubmit={handleSubmit} autoComplete=\"off\">\n        <LoginTitle>{t('loginRegisterForm.LogIn')}</LoginTitle>\n        <LoginNameOfInput>{t('loginRegisterForm.Email')}</LoginNameOfInput>\n        <Loginlabel>\n          <LoginInput\n            id=\"log\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            className={` ${borderColorMailInpt}`}\n            placeholder={t('loginRegisterForm.EnterEmail')}\n            onChange={handleChange}\n          />\n        </Loginlabel>\n\n        <LoginNameOfInput>{t('loginRegisterForm.Password')}</LoginNameOfInput>\n        <Loginlabel>\n          <LoginInput\n            id=\"log\"\n            type={type}\n            name=\"password\"\n            value={password}\n            className={` ${borderColorPassInpt}`}\n            placeholder={t('loginRegisterForm.EnterPassword')}\n            onChange={handleChange}\n          />\n          <DivIconToglePassword type=\"button\" onClick={togglePassInput}>\n            <VisionIconsLogIn type={type} />\n          </DivIconToglePassword>\n        </Loginlabel>\n\n        <LoginSubmitBtn type=\"submit\">\n          {t('btn.LogIn')}\n          <BiLogIn size={20} />\n        </LoginSubmitBtn>\n        <Toaster />\n      </LoginForm>\n\n      <SignUpBtn to={'/register'} type=\"button\">\n        <SignUpBtnText>{t('btn.SignUp')}</SignUpBtnText>\n      </SignUpBtn>\n    </ContainerLOginrForm>\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst URL = process.env.PUBLIC_URL;\n\nexport const ContainerRegisterForm = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  @media (min-width: 320px) {\n    background-color: #ffffff;\n  }\n\n  @media (min-width: 375px) {\n    background-color: ${props => props.theme.colors.secondBlueColor};\n  }\n\n  @media (min-width: 1280px) {\n    background-image: url(${URL}/images/goose_auth-desctop/goose_auth-desctop.png);\n    background-size: 400px 416px;\n    background-repeat: no-repeat;\n    background-position: 0% 100%;\n  }\n`;\n\nexport const RegisterForm = styled.form`\n  padding: 0px;\n  margin: 0 auto;\n  border-radius: 8px;\n  margin-bottom: 24px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: #ffffff;\n  position: relative;\n\n  @media (min-width: 320px) {\n    width: 100%;\n    padding: 10px;\n  }\n  @media (min-width: 375px) {\n    width: 300px;\n    padding: 20px;\n  }\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n  }\n`;\n\nexport const RegisterInput = styled.input`\n  height: 54px;\n  border-radius: 8px;\n  border: 1px solid #11111126;\n  padding: 18px;\n  transition: border 0.5s ease;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #111111;\n  }\n  &.main {\n    border: 1px solid #11111126;\n  }\n  &.fail {\n    border: 1px solid #e74a3b;\n  }\n  &.good {\n    border: 1px solid #3cbc81;\n  }\n\n  ::placeholder,\n  ::-webkit-input-placeholder {\n    color: #dce3e5;\n  }\n  :-ms-input-placeholder {\n    color: #dce3e5;\n  }\n\n  @media (min-width: 320px) {\n    width: 100%;\n  }\n  @media (min-width: 375px) {\n    width: 100%;\n  }\n  @media (min-width: 1280px) {\n    width: 400px;\n  }\n`;\nexport const Registerlabel = styled.label`\n  position: relative;\n  &:nth-child(7) {\n    margin-bottom: 48px;\n  }\n\n  &:nth-child(-n + 5) {\n    margin-bottom: 18px;\n  }\n`;\nexport const RegisterTitle = styled.h1`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 24px;\n\n  color: #3e85f3;\n  margin-bottom: 40px;\n`;\nexport const RegisterNameOfInput = styled.span`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n\n  color: #111111;\n  margin-bottom: 8px;\n`;\n\nexport const RegisterSubmitBtn = styled.button`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n\n  height: 56px;\n  width: 100%;\n\n  gap: 11px;\n  background-color: #3e85f3;\n  border: none;\n  border-radius: 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: #ffffff;\n  cursor: pointer;\n  transition: background-color 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n  }\n`;\n\nexport const LogInBtn = styled(NavLink)`\n  border: none;\n  cursor: pointer;\n  position: relative;\n`;\n\nexport const LogInBtnText = styled.span`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n  color: #3e85f3;\n\n  &:after {\n    content: ' ';\n    background: #3e85f3;\n    width: 100%;\n    height: 2px;\n    position: absolute;\n    top: 21px;\n    left: 0px;\n  }\n`;\n\nexport const DivIconToglePassword = styled.div`\n  width: 30px;\n  height: 30px;\n\n  position: absolute;\n  bottom: 11px;\n  right: 11px;\n`;\n"],"names":["VisionIconsLogIn","type","width","height","xlinkHref","process","fill","ContainerLOginrForm","styled","props","theme","colors","secondBlueColor","LoginForm","LoginInput","LoginTitle","Loginlabel","LoginNameOfInput","LoginSubmitBtn","SignUpBtn","NavLink","SignUpBtnText","Login","t","useTranslation","dispatch","useDispatch","useState","email","setEmail","password","setPassword","setType","borderColorMailInpt","setBorderColorMailInpt","borderColorPassInpt","setBorderColorPassInpt","handleChange","target","name","value","onSubmit","e","preventDefault","ToasterNotify","logIn","autoComplete","id","className","placeholder","onChange","onClick","size","to","ContainerRegisterForm","RegisterForm","RegisterInput","Registerlabel","RegisterTitle","RegisterNameOfInput","RegisterSubmitBtn","LogInBtn","LogInBtnText","DivIconToglePassword"],"sourceRoot":""}