{"version":3,"file":"static/js/991.68d0b597.chunk.js","mappings":"+SAIaA,EAAkBC,EAAAA,GAAAA,IAAH,ycA0BfC,EAAoBD,EAAAA,GAAAA,GAAH,mJASjBE,EAA0BF,EAAAA,GAAAA,EAAH,oJAQvBG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,8DAKlBK,GAAkBC,EAAAA,EAAAA,IAAH,gKAYfC,GAAgBD,EAAAA,EAAAA,IAAH,6FASNE,GAAYR,EAAAA,EAAAA,IAAOS,EAAAA,IAAPT,CAAH,kHACPK,EACTE,GAIOG,EAAwBV,EAAAA,GAAAA,EAAH,0G,SCtErBW,EAA2B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACpD,OACE,UAACd,EAAD,YACE,SAACE,EAAD,UAAmB,wBAEjBY,GAASD,IACT,UAACF,EAAD,WAAuB,oCAErB,SAACF,EAAD,CAAWM,KAAM,QAIpBD,IAAUD,IAAa,uBAAG,wBAEzBC,IAAUD,IACV,UAACV,EAAD,WAAyB,wGAGvB,SAACC,EAAD,CAAaW,KAAM,UAK5B,EC9BYC,EAAsBf,EAAAA,GAAAA,IAAH,ugBAaR,SAAAgB,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,GAIDC,uBCwB5B,EAnC8B,WAC5B,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOT,EAAP,KAAkBU,EAAlB,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOR,EAAP,KAAcU,EAAd,KACQC,GAAqBC,EAAAA,EAAAA,MAArBD,iBACFE,GAAWC,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,mCAAG,8FAEXP,GAAa,GAFF,SAGUI,GAASI,EAAAA,EAAAA,IAAYN,IAH/B,kBAKAX,MALA,uBAMTU,GAAS,GANA,4EAUXA,GAAS,GAVE,yBAYXD,GAAa,GAZF,6EAAH,qDAgBZO,GACD,GAAE,CAACH,EAAUF,KAGZ,UAACT,EAAD,YACE,SAACJ,EAAD,CAA0BE,MAAOA,EAAOD,UAAWA,KAEnD,SAAC,KAAD,MAGL,C","sources":["components/VerificationConfirmation/VerificationConfirmation.styled.jsx","components/VerificationConfirmation/VerificationConfirmation.js","pages/EmailConfirmationPage/EmailConfirmationPage.styled.jsx","pages/EmailConfirmationPage/EmailConfirmationPage.js"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { FiLoader } from 'react-icons/fi';\n\nexport const VerificationBox = styled.div`\n  padding: 0px;\n  margin: 0 auto;\n  border-radius: 8px;\n  margin-bottom: 24px;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: #ffffff;\n  position: relative;\n\n  @media (min-width: 320px) {\n    width: 100%;\n    padding: 10px;\n  }\n  @media (min-width: 375px) {\n    width: 300px;\n    padding: 20px;\n  }\n  @media (min-width: 768px) {\n    width: 520px;\n    padding: 40px;\n  }\n`;\n\nexport const VerificationTitle = styled.h1`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 24px;\n\n  color: #3e85f3;\n  margin-bottom: 40px;\n`;\n\nexport const VerificationConfirmText = styled.p`\n  font-size: 18px;\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SuccessIcon = styled(AiOutlineCheckCircle)`\n  color: green;\n  margin-top: 10px;\n`;\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst fadeAnimation = keyframes`\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.3;\n  }\n`;\n\nexport const CheckIcon = styled(FiLoader)`\n  animation: ${rotateAnimation} 4s linear infinite,\n    ${fadeAnimation} 4s ease-in-out infinite;\n  color: #e0a800;\n`;\n\nexport const VerificationCheckText = styled.p`\n  display: inline-flex;\n  gap: 5px;\n  align-items: center;\n  font-size: 18px;\n`;\n","import {\n  VerificationBox,\n  VerificationTitle,\n  VerificationConfirmText,\n  SuccessIcon,\n  CheckIcon,\n  VerificationCheckText,\n} from './VerificationConfirmation.styled';\n\nexport const VerificationConfirmation = ({ isLoading, error }) => {\n  return (\n    <VerificationBox>\n      <VerificationTitle>Email Verification</VerificationTitle>\n\n      {!error && isLoading && (\n        <VerificationCheckText>\n          Please wait, checking your email\n          <CheckIcon size={25} />\n        </VerificationCheckText>\n      )}\n\n      {error && !isLoading && <p>Verification faild</p>}\n\n      {!error && !isLoading && (\n        <VerificationConfirmText>\n          Your email address has been successfully verified. Please wait, you\n          will be redirected to your page.\n          <SuccessIcon size={35} />\n        </VerificationConfirmText>\n      )}\n    </VerificationBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContainerLOginrForm = styled.div`\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n\n  @media (min-width: 320px) {\n    background-color: #ffffff;\n  }\n\n  @media (min-width: 375px) {\n    background-color: ${props => props.theme.colors.secondBlueColor};\n  }\n\n  @media (min-width: 1280px) {\n    background-image: url(${process.env.PUBLIC_URL}/images/goose_auth-desctop/rocket_auth-desctop.png);\n\n    background-size: 368px 521px;\n    background-repeat: no-repeat;\n    background-position: right 65px bottom 40%;\n  }\n`;\n\n","import { useEffect, useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { verifyEmail } from 'redux/auth/operations';\nimport { VerificationConfirmation } from 'components/VerificationConfirmation/VerificationConfirmation';\nimport { ContainerLOginrForm } from './EmailConfirmationPage.styled';\n\nconst EmailConfirmationPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { verificationCode } = useParams();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const verify = async () => {\n      try {\n        setIsLoading(true);\n        const answer = await dispatch(verifyEmail(verificationCode));\n        \n        if (answer.error) {\n          setError(true);\n          return;\n        }\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    verify();\n  }, [dispatch, verificationCode]);\n\n  return (\n    <ContainerLOginrForm>\n      <VerificationConfirmation error={error} isLoading={isLoading} />\n\n      <Toaster />\n    </ContainerLOginrForm>\n  );\n};\n\nexport default EmailConfirmationPage;\n"],"names":["VerificationBox","styled","VerificationTitle","VerificationConfirmText","SuccessIcon","AiOutlineCheckCircle","rotateAnimation","keyframes","fadeAnimation","CheckIcon","FiLoader","VerificationCheckText","VerificationConfirmation","isLoading","error","size","ContainerLOginrForm","props","theme","colors","secondBlueColor","process","useState","setIsLoading","setError","verificationCode","useParams","dispatch","useDispatch","useEffect","verify","verifyEmail"],"sourceRoot":""}