{"version":3,"file":"static/js/959.bf9904d8.chunk.js","mappings":"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","sources":["components/VisionIconsLogIn/VisionIconsLogIn.js","pages/Register/Register.js","pages/Register/Register.styled.jsx"],"sourcesContent":["export default function VisionIconsLogIn({ type }) {\n  return (\n    <>\n      {type === 'password' ? (\n        <svg width={30} height={30}>\n          <use\n            xlinkHref={\n              process.env.PUBLIC_URL + '/images/sprite.svg#icon-show-password'\n            }\n            fill=\"#3E85F3\"\n          />\n        </svg>\n      ) : (\n        <svg width={30} height={30}>\n          <use\n            xlinkHref={\n              process.env.PUBLIC_URL + '/images/sprite.svg#icon-close-password'\n            }\n            fill=\"#3E85F3\"\n          />\n        </svg>\n      )}\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport VisionIconsLogIn from 'components/VisionIconsLogIn/VisionIconsLogIn';\nimport { BiLogIn } from 'react-icons/bi';\nimport { Toaster } from 'react-hot-toast';\nimport { ToasterNotify } from 'components/Notify/Notify';\nimport {\n  RegisterForm,\n  RegisterInput,\n  Registerlabel,\n  RegisterTitle,\n  RegisterNameOfInput,\n  RegisterSubmitBtn,\n  LogInBtn,\n  LogInBtnText,\n  ContainerRegisterForm,\n  DivIconToglePassword,\n} from './Register.styled';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [type, setType] = useState('password');\n  const [borderColorNameInpt, setBorderColorNameInpt] = useState('main');\n  const [borderColorMailInpt, setBorderColorMailInpt] = useState('main');\n  const [borderColorPassInpt, setBorderColorPassInpt] = useState('main');\n\n  function validationName(inputText) {\n    if (inputText.length >= 16) {\n      setBorderColorNameInpt('fail');\n      ToasterNotify('Name must be less than 16 characters.');\n      return false;\n    } else {\n      setBorderColorNameInpt('good');\n      return true;\n    }\n  }\n\n  function validateEmail(inputText) {\n    const mailFormat = /\\S+@\\S+\\.\\S+/;\n\n    if (inputText.match(mailFormat)) {\n      setBorderColorMailInpt('good');\n      return true;\n    } else {\n      setBorderColorMailInpt('fail');\n      ToasterNotify('Invalid email address');\n      return false;\n    }\n  }\n\n  function validatePassword(inputText) {\n    const isValidLength = /^.{6,16}$/;\n    if (!isValidLength.test(inputText)) {\n      ToasterNotify('Password must be 6-16 Characters Long.');\n      setBorderColorPassInpt('fail');\n      return false;\n    }\n    const isNonWhiteSpace = /^\\S*$/;\n    if (!isNonWhiteSpace.test(inputText)) {\n      ToasterNotify('Password must not contain Whitespaces.');\n      setBorderColorPassInpt('fail');\n      return false;\n    }\n\n    const isContainsUppercase = /^(?=.*[A-Z]).*$/;\n    if (!isContainsUppercase.test(inputText)) {\n      ToasterNotify('Password must have at least one Uppercase Character.');\n      setBorderColorPassInpt('fail');\n      return false;\n    }\n\n    const isContainsLowercase = /^(?=.*[a-z]).*$/;\n    if (!isContainsLowercase.test(inputText)) {\n      ToasterNotify('Password must have at least one Lowercase Character.');\n      setBorderColorPassInpt('fail');\n      return false;\n    }\n\n    const isContainsNumber = /^(?=.*[0-9]).*$/;\n    if (!isContainsNumber.test(inputText)) {\n      ToasterNotify('Password must contain at least one Digit.');\n      setBorderColorPassInpt('fail');\n      return false;\n    } else {\n      setBorderColorPassInpt('good');\n      return true;\n    }\n  }\n\n  function isValidateForm() {\n    if (!validationName(name)) {\n      return false;\n    }\n    if (!validateEmail(email)) {\n      return false;\n    }\n    if (!validatePassword(password)) {\n      return false;\n    }\n    return true;\n  }\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isValidateForm()) {\n      setBorderColorNameInpt('good');\n      setBorderColorMailInpt('good');\n      setBorderColorPassInpt('good');\n      dispatch(register({ name, email, password }));\n      setEmail('');\n      setName('');\n      setPassword('');\n    }\n  };\n\n  function togglePassInput() {\n    if (type === 'password') {\n      setType('text');\n    }\n    if (type === 'text') {\n      setType('password');\n    }\n  }\n\n  return (\n    <ContainerRegisterForm>\n      <RegisterForm onSubmit={handleSubmit} autoComplete=\"off\">\n        <RegisterTitle>Sign Up</RegisterTitle>\n        <RegisterNameOfInput>Name</RegisterNameOfInput>\n        <Registerlabel>\n          <RegisterInput\n            id=\"reg\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={` ${borderColorNameInpt}`}\n            placeholder=\"Enter your name\"\n            onChange={handleChange}\n          />\n        </Registerlabel>\n        <RegisterNameOfInput>Email</RegisterNameOfInput>\n        <Registerlabel>\n          <RegisterInput\n            id=\"reg\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            className={` ${borderColorMailInpt}`}\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n          />\n        </Registerlabel>\n        <RegisterNameOfInput>Password</RegisterNameOfInput>\n        <Registerlabel>\n          <RegisterInput\n            id=\"reg\"\n            type={type}\n            name=\"password\"\n            value={password}\n            className={` ${borderColorPassInpt}`}\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n          />\n          <DivIconToglePassword type=\"button\" onClick={togglePassInput}>\n            <VisionIconsLogIn type={type} />\n          </DivIconToglePassword>\n        </Registerlabel>\n\n        <RegisterSubmitBtn type=\"submit\">\n          Sign Up\n          <BiLogIn size={20} />\n        </RegisterSubmitBtn>\n        <Toaster />\n      </RegisterForm>\n\n      <LogInBtn to={'/login'} type=\"button\">\n        <LogInBtnText>Log in </LogInBtnText>\n      </LogInBtn>\n    </ContainerRegisterForm>\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst URL = process.env.PUBLIC_URL;\n\nexport const ContainerRegisterForm = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  @media (min-width: 320px) {\n    background-color: #ffffff;\n  }\n\n  @media (min-width: 375px) {\n    background-color: ${props => props.theme.colors.secondBlueColor};\n  }\n\n  @media (min-width: 1280px) {\n    background-image: url(${URL}/images/goose_auth-desctop/goose_auth-desctop.png);\n    background-size: 400px 416px;\n    background-repeat: no-repeat;\n    background-position: 0% 100%;\n  }\n`;\n\nexport const RegisterForm = styled.form`\n  padding: 0px;\n  margin: 0 auto;\n  border-radius: 8px;\n  margin-bottom: 24px;\n\n  display: flex;\n  flex-direction: column;\n  background-color: #ffffff;\n  position: relative;\n\n  @media (min-width: 320px) {\n    width: 100%;\n    padding: 10px;\n  }\n  @media (min-width: 375px) {\n    width: 300px;\n    padding: 20px;\n  }\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n  }\n`;\n\nexport const RegisterInput = styled.input`\n  height: 54px;\n  border-radius: 8px;\n  border: 1px solid #11111126;\n  padding: 18px;\n  transition: border 0.5s ease;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #111111;\n  }\n  &.main {\n    border: 1px solid #11111126;\n  }\n  &.fail {\n    border: 1px solid #e74a3b;\n  }\n  &.good {\n    border: 1px solid #3cbc81;\n  }\n\n  ::placeholder,\n  ::-webkit-input-placeholder {\n    color: #dce3e5;\n  }\n  :-ms-input-placeholder {\n    color: #dce3e5;\n  }\n\n  @media (min-width: 320px) {\n    width: 100%;\n  }\n  @media (min-width: 375px) {\n    width: 100%;\n  }\n  @media (min-width: 1280px) {\n    width: 400px;\n  }\n`;\nexport const Registerlabel = styled.label`\n  &:nth-child(7) {\n    margin-bottom: 48px;\n    position: relative;\n  }\n\n  &:nth-child(-n + 5) {\n    margin-bottom: 18px;\n  }\n`;\nexport const RegisterTitle = styled.h1`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 24px;\n\n  color: #3e85f3;\n  margin-bottom: 40px;\n`;\nexport const RegisterNameOfInput = styled.span`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n\n  color: #111111;\n  margin-bottom: 8px;\n`;\n\nexport const RegisterSubmitBtn = styled.button`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n\n  height: 56px;\n  width: 100%;\n\n  gap: 11px;\n  background-color: #3e85f3;\n  border: none;\n  border-radius: 16px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: #ffffff;\n  cursor: pointer;\n  transition: background-color 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n  }\n`;\n\nexport const LogInBtn = styled(NavLink)`\n  border: none;\n  cursor: pointer;\n  position: relative;\n`;\n\nexport const LogInBtnText = styled.span`\n  font-family: 'Inter', sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n  color: #3e85f3;\n\n  &:after {\n    content: ' ';\n    background: #3e85f3;\n    width: 100%;\n    height: 2px;\n    position: absolute;\n    top: 21px;\n    left: 0px;\n  }\n`;\n\nexport const DivIconToglePassword = styled.div`\n  width: 30px;\n  height: 30px;\n\n  position: absolute;\n  bottom: 11px;\n  right: 11px;\n`;\n"],"names":["VisionIconsLogIn","type","width","height","xlinkHref","process","fill","Register","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","setType","borderColorNameInpt","setBorderColorNameInpt","borderColorMailInpt","setBorderColorMailInpt","borderColorPassInpt","setBorderColorPassInpt","isValidateForm","length","ToasterNotify","inputText","match","validateEmail","test","validatePassword","handleChange","target","value","onSubmit","e","preventDefault","register","autoComplete","id","className","placeholder","onChange","onClick","size","to","ContainerRegisterForm","styled","props","theme","colors","secondBlueColor","RegisterForm","RegisterInput","Registerlabel","RegisterTitle","RegisterNameOfInput","RegisterSubmitBtn","LogInBtn","NavLink","LogInBtnText","DivIconToglePassword"],"sourceRoot":""}